@*@model IEnumerable<BetaDota2StatsMVC.Models.Match>*@
@*@model BetaDota2StatsMVC.Models.MatchesHeroesViewModel*@
@model BetaDota2StatsMVC.Models.MatchesHeroesViewModel
@using PagedList.Mvc

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Matches History</h2>
<hr />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Match.Match_id)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Match.Player_slot)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Match.Radiant_win)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Match.Duration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Match.Game_mode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Match.Lobby_type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Match.Hero_id)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Match.Start_time)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.Match.Version)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Match.Kills)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Match.Deaths)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Match.Assists)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Match.Skill)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Match.Leaver_status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Match.Party_size)
        </th>
        <th></th>
    </tr>
    @*@{var count = 0;}*@
    @foreach (var item in Model.Matches)
    {
        <tr>
            @*@{
                    count++;
                }*@
            <td>
                @Html.DisplayFor(modelItem => item.Match_id)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Player_slot)
                </td>*@
            <td>
                @{
                    var whoWon = "Dire";
                    if (item.Radiant_win == true)
                    {
                        whoWon = "Radiant";
                    }
                }
                @whoWon
            </td>
            <td>
                @{
                    var durationHours = 0;//8elw integer
                    var durationMinutes = 0;
                    var durationSeconds = 0;
                    if (item.Duration >= 3600)
                    {
                        durationHours = item.Duration / 3600;
                    }
                    if (item.Duration - durationHours * 3600 >= 60)
                    {
                        durationMinutes = (item.Duration - durationHours * 3600) / 60;
                    }
                    durationSeconds = item.Duration - durationHours * 3600 - durationMinutes * 60;
                }
                @{
                    var durationHour = $"{durationHours}";
                    var durationMinute = $"{durationMinutes}";
                    var durationSecond = $"{durationSeconds}";
                    if (durationHours < 10)
                    {
                        durationHour = $"0{durationHours}";
                    }
                    if (durationMinutes < 10)
                    {
                        durationMinute = $"0{durationMinutes}";
                    }
                    if (durationSeconds < 10)
                    {
                        durationSecond = $"0{durationSeconds}";
                    }
                    var duration = $"{durationHour}:{durationMinute}:{durationSecond}";
                }
                <p>@duration</p>
                @*test gia na dw oti h diarkeia tou match einai komple. to api fernei to duration se deuterolepta H epibebaiwsh me to dotabuff*@
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @{
                    if (item.Game_mode == 22)
                    {
                        <p>All Pick</p>
                    }
                    else
                    {
                        <p>No Info</p>
                    }
                }
                @*@Html.DisplayFor(modelItem => item.Game_mode)*@
            </td>
            <td>
                @{
                    if (item.Lobby_type == 0)
                    {
                        <p>Normal</p>
                    }
                    else if (item.Lobby_type == 7)
                    {
                        <p>Rank</p>
                    }
                }
                @*@Html.DisplayFor(modelItem => item.Lobby_type)*@
            </td>
            <td>
                @{
                    var heroName = Model.Heroes.Where(x => x.Value.Id == item.Hero_id).Select(y => y.Value.Localized_name).FirstOrDefault();
                }
                @heroName
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Start_time)
                </td>*@
            @*<td>
                    @Html.DisplayFor(modelItem => item.Version)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Kills)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Deaths)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Assists)
            </td>
            <td>
                @{
                    if (item.Skill == 1)
                    {
                        <p>Normal</p>
                    }
                    else if (item.Skill == 2)
                    {
                        <p>High</p>
                    }
                    else
                    {
                        <p>Very High</p>
                    }
                }
            </td>
            <td>
                @{
                    var leaver = "Yes";
                    if (item.Leaver_status == 0)
                    {
                        leaver = "No";
                    }
                }
                @leaver
            </td>
            <td>
                @{
                    if (item.Party_size == 1)
                    {
                        <p>Solo</p>
                    }
                    else if (item.Party_size == null)
                    {
                        <p>No Info</p>
                    }
                    else
                    {
                        <p>Party with @(item.Party_size - 1)</p>
                    }
                }
            </td>
            <td>
                @Html.ActionLink("Match Details", "MatchDetail", new { id = item.Match_id })
            </td>
        </tr>
    }
</table>
Page @(Model.Matches.PageCount < Model.Matches.PageNumber ? 0 : Model.Matches.PageNumber) of @Model.Matches.PageCount
@Html.PagedListPager(Model.Matches, page => Url.Action("Index", new { page }))